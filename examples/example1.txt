@entity Color: value: any;
@entity Node: value: int;
@entity Edge: node1: Node, node2: Node;
@entity Assign: node: Node, color: Color;


guess from Node as n
	count of {a2.node from Assign as a2 where a2.node.value=1; e3 from Edge as e3 where e3.node1.value=n.value} == 7
	where n.value=1
	exactly 1 
		Assign
			from Color as c
				where n=Assign.node and Assign.color=c;

define Node as n
	from Assign as a
	max of {a2.node.value from Assign as a2 where a2.node.value=1} >= n.value and
	sum of {a4.node.value from Assign as a4} ==1
		where n.value==a.node.value;

define Color as c
    from Assign, Node as n
	where Assign.color=c and n.value=5;


guess from Node as n
	where n.value=6
		exactly 1 
			Assign
				from not Color as c
					where Assign.node=n and Assign.color=c and c.value="green";

define Node as n
	from Assign as a 
		where a.node=n and n.value>1;

deny unless Node as n
	from Assign as a
		where a.node.value=n.value and a.color.value="green";

deny from Node as n, Edge as e, Node as n2
	where e.node1=n and e.node2=n2;

deny from Edge as e, Node as n
	where e.node1=n
		or pay 2 at n.value;

deny unless Node as n
		count of {a from Assign as a where a.node.value=3}>=2
		where n.value=2
			or pay 2 at n.value;

define Edge
	from Edge as e2, Assign as a
		where e2.node1=Edge.node1 and Edge.node2=a.node;

